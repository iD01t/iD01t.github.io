name: Build ebook pages

on:
  push:
    branches: [ main ]
    paths:
      - "data/**"
      - "templates/**"
      - "scripts/**"
      - "docs/**"
      - ".github/workflows/build-ebooks.yml"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0     # ensure all files and history

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install deps
        run: pip install jinja2

      - name: List files for debugging
        run: |
          pwd
          git status
          ls -lR

      # Robust locator: finds ebooks.json anywhere in the repo
      - name: Locate ebooks.json
        id: locate
        shell: bash
        run: |
          set -e
          FOUND="$(find . -type f -name 'ebooks.json' | head -n 1 || true)"
          if [ -z "$FOUND" ]; then
            echo "ebooks.json not found!"
            exit 1
          fi
          echo "Found catalog at: $FOUND"
          echo "EBOOKS_JSON=$FOUND" >> "$GITHUB_ENV"

      - name: Generate ebook pages
        run: python scripts/build_ebook_pages.py
        env:
          SITE_ORIGIN: "https://id01t.store"

      - name: Stage site into docs/
        run: |
          mkdir -p docs/ebooks docs/data
          # Copy generated pages
          cp -r ebooks/*.html docs/ebooks/ || true
          # Copy dynamic fallback if present
          if [ -f "ebook.html" ]; then cp ebook.html docs/; fi
          # Publish catalog for client-side use
          cp "$EBOOKS_JSON" docs/data/ebooks.json

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
